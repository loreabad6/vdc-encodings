---
title: "VDC encodings"
format: 
  html:
    toc: true
---

```{r}
library(sf)
library(stars)
```

# Files from `mdim` documentation in stars

```{r}
set.seed(135)
m = matrix(runif(10), 2, 5)
names(dim(m)) = c("stations", "time")
times = as.Date("2022-05-01") + 1:5
pts = st_as_sfc(c("POINT(0 1)", "POINT(3 5)"))
s = st_as_stars(list(Precipitation = m)) |>
 st_set_dimensions(1, values = pts) |>
 st_set_dimensions(2, values = times)
```

## Write with stars

```{r}
temp_stars_nc = "mdim-stars.nc"
temp_stars_zr = "mdim-stars.zarr"
```

```{r}
#| eval: false
write_mdim(s, temp_stars_nc)
write_mdim(s, temp_stars_zr)
```

## Read back with stars

```{r}
read_mdim(here::here(temp_stars_nc))
read_mdim(here::here(temp_stars_zr))
```

## File structure

```{r}
ncmeta::nc_meta(here::here(temp_stars_nc))
fs::dir_tree(here::here(temp_stars_zr))
```


## Read in Python

### NetCDF

Can be read but it is not decoded correctly.
Note that the stations are floats and the geometries are placed in a data variable with the name None.

See outputs [here](https://github.com/loreabad6/vdc-encodings/blob/main/io.ipynb)

![](mdim-nc-savedwithstars-readwithxvec.png)

### Zarr
Fails.

See [Jupyter notebook](https://github.com/loreabad6/vdc-encodings/blob/main/io.ipynb).

# Files saved with `xvec.encode_cf()`

**CF conventions and netCDF, Zarr** section in [xvec development documentation](https://github.com/martinfleis/xvec/blob/summary/doc/source/io.ipynb)

Function: [here](https://github.com/martinfleis/xvec/blob/summary/xvec/accessor.py#L1343)

```{r}
fn_xvec_nc = "geo-encoded-xvec.nc"
fn_xvec_zr = "geo-encoded-xvec.zarr"
```

## Read with stars
```{r}
(nc = read_mdim(here::here(fn_xvec_nc)))
## Reading the zarr file crashes R!
# (zr = read_mdim(fn_zr))
```

## Write with stars 
```{r}
fn_stars_nc = "geo-encoded-stars.nc"
fn_stars_zr = "geo-encoded-stars.zarr"
```

```{r}
#| eval: false
write_mdim(nc, here::here(fn_stars_nc))
write_mdim(nc, here::here(fn_stars_zr))
```

## Check file structures

```{r}
ncmeta::nc_meta(here::here(fn_xvec_nc))
ncmeta::nc_meta(here::here(fn_stars_nc))

fs::dir_tree(here::here(fn_xvec_zr))
fs::dir_tree(here::here(fn_stars_zr))
```

## Read back with stars
```{r}
read_mdim(here::here(fn_stars_nc))
read_mdim(here::here(fn_stars_zr))
```

## Reading back with Python 

Both NetCDF and Zarr fail.

See [Jupyter notebook](https://github.com/loreabad6/vdc-encodings/blob/main/io.ipynb).